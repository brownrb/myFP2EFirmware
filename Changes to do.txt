in setup()

  HDebugPrint("Heap = ");
  HDebugPrintf("%u\n", ESP.getFreeHeap());
  // Serial.println("setup(): driverboard");
  // ensure targetposition will be same as focuser position
  // otherwise after loading driverboard focuser will start moving immediately
  ftargetPosition = mySetupData->get_fposition();
  driverboard = new DriverBoard(DRVBRD, mySetupData->get_fposition() );
  // ensure driverboard position is same as setupData

in myboards.cpp

DriverBoard::DriverBoard(byte brdtype, unsigned long startposition) : boardtype(brdtype)

#endif
    // set default focuser position - ensure it is same as mySetupData when loaded
    this->focuserposition = startposition;
  } while (0);

in myboards.h
    DriverBoard(byte, unsigned long);           // constructor
    ~DriverBoard(void);                         // destructor

in loop()
        if ( halt_alert )
        {
          Serial.println("halt_alert");
          halt_alert = false;                             // reset alert flag
          ftargetPosition = driverboard->getposition();
          mySetupData->set_fposition(driverboard->getposition());
          int haltsteps = driverboard->halt();            // halt returns stepcount